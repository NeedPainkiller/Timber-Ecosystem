worker_processes  auto;
worker_rlimit_nofile 65535;

events {
  worker_connections  65534;
  # Connection Processing method (http://nginx.org/en/docs/events.html)
  use epoll;
}

http {

  include /etc/nginx/http.conf;


################ pi-alert ################
  upstream system_pi_alert {
    ip_hash;
    keepalive 100;
#     server  192.168.0.14:20211;
    server  system-pi-alert:20211;
  }
  server {
    listen 80;
    listen [::]:80;
    server_name pi-alert.needpainkiller.xyz;
    return 301 https://$server_name$request_uri;
  }

 server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name pi-alert.needpainkiller.xyz;

    include /etc/nginx/ssl.conf;

    location / {
        include /etc/nginx/reverse-proxy.conf;
        proxy_pass http://system_pi_alert;
    }

    include /etc/nginx/server.conf;
  }

################ adguard-home ################

  upstream system_adguard_home {
    ip_hash;
    keepalive 100;
#     server 192.168.0.14:13080;
    server system-adguard-home:80;
  }
  server {
    listen 80;
    listen [::]:80;
    server_name adguard.needpainkiller.xyz;
    return 301 https://$server_name$request_uri;
  }

 server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name adguard.needpainkiller.xyz;

    include /etc/nginx/ssl.conf;

    location / {
        include /etc/nginx/reverse-proxy.conf;
        proxy_pass http://system_adguard_home;
    }

    include /etc/nginx/server.conf;
  }

################ uptime-kuma ################

  upstream system_uptime_kuma {
    ip_hash;
    keepalive 100;
    server system-uptime-kuma:3001;
  }
  server {
    listen 80;
    listen [::]:80;
    server_name system-uptime-kuma.needpainkiller.xyz;
    return 301 https://$server_name$request_uri;
  }

 server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name uptime-kuma.needpainkiller.xyz;

    include /etc/nginx/ssl.conf;

    location / {
        include /etc/nginx/reverse-proxy.conf;
        proxy_pass http://system_uptime_kuma;
    }

    include /etc/nginx/server.conf;
  }

################ portainer ################

  upstream system_portainer {
    ip_hash;
    keepalive 100;
    server system-portainer:9000;
  }
  server {
    listen 80;
    listen [::]:80;
    server_name system-portainer.needpainkiller.xyz;
    return 301 https://$server_name$request_uri;
  }

 server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name portainer.needpainkiller.xyz;

    include /etc/nginx/ssl.conf;

    location / {
        include /etc/nginx/reverse-proxy.conf;
        proxy_pass http://system_portainer;
    }

    include /etc/nginx/server.conf;
  }


############### homer-mypage ################

  upstream application_homer_mypage {
    ip_hash;
    keepalive 100;
    server application-homer-mypage:8080;
  }

  server {
    listen 80;
    listen [::]:80;
    server_name mypage.needpainkiller.xyz;
    return 301 https://$server_name$request_uri;
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name mypage.needpainkiller.xyz;

    include /etc/nginx/ssl.conf;

    location / {
        include /etc/nginx/reverse-proxy.conf;
        proxy_pass http://application_homer_mypage;
#         add_header Content-Type text/plain;
#         return 200 'hello, world!';

    }

    include /etc/nginx/server.conf;
  }

 ################ healthchecks ################

  upstream application_healthchecks {
    ip_hash;
    keepalive 100;
    server application-healthchecks:8000;
  }
  server {
    listen 80;
    listen [::]:80;
    server_name healthchecks.needpainkiller.xyz;
    return 301 https://$server_name$request_uri;
  }

 server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name healthchecks.needpainkiller.xyz;

    include /etc/nginx/ssl.conf;

    location / {
#         include /etc/nginx/reverse-proxy.conf;
#  healthchecks 서비스가 자체적으로 Access-Control-Allow-Origin 을 "*" 로 설정하고 있어서 include 하지 않음
        if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "https://mypage.needpainkiller.xyz";
                add_header Access-Control-Allow-Credentials 'true';
                add_header Access-Control-Allow-Headers 'origin, x-requested-with, accept, x-api-key, X-Requested-With';
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Content-Type text/plain;
                add_header Content-Length 0;
                return 204;
        }
        if ($request_method != OPTIONS) {
            add_header Access-Control-Allow-Credentials 'true';
            add_header Access-Control-Allow-Headers 'origin, x-requested-with, accept, x-api-key, X-Requested-With';
        }

        proxy_redirect off;
        # proxy_set_header Host  $proxy_host;
        proxy_set_header Host  $http_host;
        add_header X-Served-By $host;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Referer $http_referer;

        limit_except OPTIONS GET POST PUT DELETE {
                deny all;
        }
        proxy_pass http://application_healthchecks;
    }

    include /etc/nginx/server.conf;
  }

 ################ ghost ################

  upstream application_ghost {
    ip_hash;
    keepalive 100;
    server application-ghost:2368;
  }
  server {
    listen 80;
    listen [::]:80;
    server_name ghost.needpainkiller.xyz;
    return 301 https://$server_name$request_uri;
  }
  server {
    listen 80;
    listen [::]:80;
    server_name blog.needpainkiller.xyz;
    return 301 https://$server_name$request_uri;
  }
 server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name ghost.needpainkiller.xyz;

    include /etc/nginx/ssl.conf;

    location / {
        include /etc/nginx/reverse-proxy.conf;
        proxy_pass http://application_ghost;
    }

    keepalive_timeout 15s;

    # Gzip 세팅
    gzip on;
    gzip_comp_level    5;
    gzip_min_length 256;
    gzip_proxied       any;
    gzip_vary          on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

    location /robots.txt {
        return 200 "User-agent: *\nAllow: /";
    }

    location /not-supported {
        index /ie-browser-denied.html;
    }
  }
 server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name blog.needpainkiller.xyz;

    include /etc/nginx/ssl.conf;

    location / {
        include /etc/nginx/reverse-proxy.conf;
        proxy_pass http://application_ghost;
    }

    keepalive_timeout 15s;

    # Gzip 세팅
    gzip on;
    gzip_comp_level    5;
    gzip_min_length 256;
    gzip_proxied       any;
    gzip_vary          on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

    location /robots.txt {
        return 200 "User-agent: *\nAllow: /";
    }

    location /not-supported {
        index /ie-browser-denied.html;
    }
  }

}